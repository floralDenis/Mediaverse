@using Mediaverse.Application.ContentSearch.Queries.GetRelevantContent
@using Mediaverse.Application.ContentSearch.Queries.GetRelevantContent.Dtos
@using Mediaverse.Application.JointContentConsumption.Common.Dtos
@model RoomDto;
@{
    ViewData["Title"] = Model.Name;
}

<h1 class="display-4" style="display: inline-block; padding-left: 7%"><strong>@Model.Name</strong></h1>
<label style="padding-left: 12%; padding-right: 2%; font-size: 18px"><strong>Join code</strong>: <u>@Model.Token</u></label>
<input type="button" value="Copy link to clipboard" onclick="copyToClipboard('@Url.ActionLink("JoinRoomByLink")?roomToken=@Model.Token')">
<div style="padding-top: 2%; padding-left:7%">
    <div class="room">
        @await Html.PartialAsync("ContentSearchLine", new GetRelevantContentQuery())
    
        <div id="contentPlayerContainer"></div>
        <script>
            $.get('@Url.Action("CurrentlyPlayingContent", "ContentConsumption")', {roomId: '@Model.Id'}, function(content){
                    $("#contentPlayerContainer").html(content);
                });
        </script>

        <div id="playlistContainer"></div>
        <script>
            $.get('@Url.Action("Playlist", "ContentConsumption")', {roomId: '@Model.Id'}, function(content){
                    $("#playlistContainer").html(content);
                });
        </script>
    
        @await Html.PartialAsync("SearchResults", new SearchResultDto())
    </div>
</div>

@await Html.PartialAsync("ModalDialog")

<script type="text/javascript">
    const copyToClipboard = function(text) {
        const temporaryElement = document.createElement('input');
        document.body.appendChild(temporaryElement);
        
        temporaryElement.value = text;
        temporaryElement.select();
        
        document.execCommand('copy');
        document.body.removeChild(temporaryElement);
    }
    
        $(document).ready(function() {
            var source = new EventSource("/default-sse-endpoint");       
            source.onmessage = function (event) {
                if (event.data === "playing") {
                    startPlayback();
                }
                else if (event.data === "paused") {
                    pausePlayback();
                }
                else if (event.data === "switched_content") {
                    refreshCurrentlyPlayingContent();
                }
                else if (event.data === "playlist_updated") {
                    refreshPlaylist();
                }
            }
        });
    
        function refreshCurrentlyPlayingContent() {
            $.ajax({
                type: "GET",
                url: '@Url.Action("CurrentlyPlayingContent", "ContentConsumption")?roomId=@Model.Id',
                success: function(res) {
                    $('#contentPlayerContainer').html(res);
                },
                error: function(xhr, ajaxOptions, thrownError) {
                    const error = JSON.parse(xhr.responseText);
                    showModal("Operation attempt failed", error.message)
                }
            });
        }
        
        function refreshPlaylist() {
            $.ajax({
                type: "GET",
                url: '@Url.Action("Playlist", "ContentConsumption")?roomId=@Model.Id',
                success: function(res) {
                    $('#playlist').replaceWith(res);
                },
                error: function(xhr, ajaxOptions, thrownError) {
                    const error = JSON.parse(xhr.responseText);
                    showModal("Operation attempt failed", error.message)
                }
            });
        }

    window.addEventListener('beforeunload', function (e) {
        leaveRoom();
    });

    const leaveRoom = function(){
        $.ajax({
            type: "POST",
            url: '@Url.Action("LeaveRoom", "ContentConsumption")',
            data: '@Model.Id',
            error: function(xhr, ajaxOptions, thrownError) {
                const error = JSON.parse(xhr.responseText);
                showModal(" attempt failed", error.message)
            }
        });
    }
     

    const addToPlaylist = function(
        externalId,
        contentSource,
        contentType) {
        
        let contentId = {
            ExternalId: externalId,
            ContentSource: contentSource,
            contentType: contentType
        }
        
        let command = {
            ContentId: contentId,
            CurrentRoomId: '@Model.Id'
        }
        
        $.ajax({
            type: "POST",
            url: '@Url.Action("AddContentToPlaylist", "ContentConsumption")',
            data: command,
            error: function(xhr, ajaxOptions, thrownError) {
                const error = JSON.parse(xhr.responseText);
                showModal("Operation attempt failed", error.message)
            }
        });
    };
    
    const removeFromPlaylist = function(
            externalId,
            contentSource,
            contentType) {
            
            let contentId = {
                ExternalId: externalId,
                ContentSource: contentSource,
                contentType: contentType
            }
            
            let command = {
                ContentId: contentId,
                CurrentRoomId: '@Model.Id'
            }
            
            $.ajax({
                type: "POST",
                url: '@Url.Action("RemoveContentFromPlaylist", "ContentConsumption")',
                data: command,
                error: function(xhr, ajaxOptions, thrownError) {
                    const error = JSON.parse(xhr.responseText);
                    showModal("Operation attempt failed", error.message)
                }
            });
        };
    
    const switchContent = function(direction) {  
        let command = {
            RoomId: '@Model.Id',
            Direction: direction
        }
        
        $.ajax({
            type: "POST",
            url: '@Url.Action("SwitchContent", "ContentConsumption")',
            data: command,
            success: function(res) {
                $('#contentPlayer').replaceWith(res);
            },
            error: function(xhr, ajaxOptions, thrownError) {
                const error = JSON.parse(xhr.responseText);
                showModal("Operation attempt failed", error.message)
            }
        });
    };
    
    function onContentPlaybackStarted(currentPlaybackTime) {
        changeContentPlayerState("playing", currentPlaybackTime);               
    }
    
    function onContentPlaybackPaused(currentPlaybackTime) {
        changeContentPlayerState("paused", currentPlaybackTime);         
    }
    
    const changeContentPlayerState = function (contentPlayerState, currentPlaybackTime){
        const command = {
                RoomId: '@Model.Id',
                State: contentPlayerState,
                CurrentPlaybackTimeInSeconds: currentPlaybackTime
            };
        
        $.ajax({
            type: "POST",
            url: '@Url.Action("ChangeContentPlayerState", "ContentConsumption")',
            data: command,
            error: function(xhr, ajaxOptions, thrownError) {
                const error = JSON.parse(xhr.responseText);
                showModal("Operation attempt failed", error.message)
            }
        });
    }
</script>