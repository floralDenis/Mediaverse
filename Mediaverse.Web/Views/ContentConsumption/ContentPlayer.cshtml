@model Mediaverse.Application.JointContentConsumption.Commands.SwitchContent.Dtos.ContentDto

<div id="contentPlayer">
    <div class="content-player" style="height: 400px">
        @if (Model.Player != null)
        {
            <div id="iframeContainer"></div>
        }
        else
        {
            <img width="100%" height="100%" src="/Resources/Images/NoContentToPlayImage.png" style="border-radius: 5px"/>
        }
    </div>

    <div class="content-name">
        @if (Model.Player != null)
        {
            <h2>Currently playing: @Model.Title</h2>
        }
    </div>
    
    @if (Model.Player != null)
    {
        <script type="text/javascript">   
            var player;            
            function createPlayer() {
                window.YT.ready(function() {
                    player = new YT.Player('iframeContainer', {
                        width: '100%',
                        height: '100%',
                        events: {
                          'onStateChange': onPlayerStateChange,
                          'onReady': onPlayerReady
                        }
                    });
                })   
            }
    
            $(document).ready(function() {
              $.getScript("https://www.youtube.com/iframe_api", function() {
                createPlayer();
              });
            });
            
            function onPlayerStateChange(event) {
                if (event.data === YT.PlayerState.PLAYING 
                    || event.data === YT.PlayerState.PAUSED) {
                        var isEventReaction = $("#IsEventReaction");
                        
                        if (isEventReaction.val() == 1){
                            isEventReaction.attr('value', 0);
                        }
                        else {
                            // video is playing
                            if (event.data === YT.PlayerState.PLAYING) {     
                                onContentPlaybackStarted(player.getCurrentTime());
                            }
                            
                            // video is paused
                            else if (event.data === YT.PlayerState.PAUSED) {                                                    
                                onContentPlaybackPaused(player.getCurrentTime());
                            } 
                        }
                    }
            }  
            
            function onPlayerReady(event) {
                player.cueVideoById('@Model.Id.ExternalId', @Model.Player.PlayingTime);
                if ('@Model.Player.State' === "Playing") {
                    startPlayback(@Model.Player.PlayingTime);
                }
            }    
            
            function startPlayback(currentTime) {
                if (player.getPlayerState() !== YT.PlayerState.PLAYING){
                    seekToTime(currentTime);
                    
                    $("#IsEventReaction").attr('value', 1);
                    player.playVideo();
                }
            }
            
            function pausePlayback(currentTime) {
                if (player.getPlayerState() !== YT.PlayerState.PAUSED){
                    $("#IsEventReaction").attr('value', 1);
                    player.pauseVideo();
                    seekToTime(currentTime);
                }
            }
            
            function seekToTime(time) {
                if (Math.abs(time - player.getCurrentTime()) > 2
                    && player.getPlayerState() !== YT.PlayerState.CUED){
                    player.seekTo(time, true);
                }
            }
        </script>
    }
</div>